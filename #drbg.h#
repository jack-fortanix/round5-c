/*
 * Copyright (c) 2018, Koninklijke Philips N.V.
 */

/**
 * @file
 * Declaration of the deterministic random bits (bytes) functions.
 */

#ifndef DRBG_H
#define DRBG_H

#include "r5_parameter_sets.h"
#include "utils.h"
#include "shake.h"
#include "r5_hash.h"

#include <stdint.h>
#include <stddef.h>

/**
 * The DRBG context data structure.
 */
typedef struct drbg_ctx {

} drbg_ctx;

/**
 * Generates the next sequence of deterministic random bytes using the
 * (initial) seed as set with `drbg_init()`.
 *
 * @param[out] x    destination buffer for the random bytes
 * @param[in]  xlen the number of deterministic random bytes to generate
 */

#define drbg(x, xlen) do { \
    for (size_t j = 0; j < xlen; j++) { \
        if (ctx.index >= SHAKE256_RATE) { \
            shake256_squeezeblocks(&ctx.shake, ctx.output, 1); \
            ctx.index = 0; \
        } \
        ((uint8_t *) x)[j] = ctx.output[ctx.index++]; \
    } \
} while (0)

/**
 * Generates the next deterministic random 16-bit integer using the
 * (initial) seed as set with `drbg_init()`.
 *
 * @param[out] x    destination variable for the 16-bit integer
 */
#define drbg16(x) do { \
    drbg(&x, 2); \
} while (0)


#endif /* DRBG_H */
